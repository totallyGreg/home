# use C-a, legacy screen muscle memory and home row and easier to hit than C-b
set-option -g prefix C-a
# Screen-like switching
bind-key C-a last-window
# Start window numbering at 1
set -g base-index 1
# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
# setw -g mode-keys vi
set-window-option -g mode-keys vi

set-option -g default-terminal "screen-256color"

bind-key : command-prompt
bind-key r refresh-client

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# uncomment below stanza to enable smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
# Update default binding of `Enter` to also use copy-pipe
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# Useful VIM copy keybindings
# Test for Newer versions
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi v   send -X begin-selection; \
   bind-key -T copy-mode-vi V   send -X select-line; \
   bind-key -T copy-mode-vi C-v send -X rectangle-toggle; \
   bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel"
   # bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"

# New keybindings for vi-mode when version >= 2.4
# https://github.com/tmux/tmux/issues/754
# if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
#   'bind-key -T copy-mode-vi v send-keys -X begin-selection ; \
#    bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" ; \
#    unbind -T copy-mode-vi Enter ; \
#    bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"; ' \
#   'bind-key -t vi-copy v begin-selection ; \
#    bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy" ; \
#    unbind -t vi-copy Enter ; \
#    bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"; '

set-window-option -g display-panes-time 1500

# Status Bar
set-option -g status-interval 1
set-option -g status-left ''
set-option -g status-right '%l:%M%p'
set-window-option -g window-status-current-fg magenta
set-option -g status-fg default

# Status Bar solarized-dark (default)
set-option -g status-bg black
set-option -g pane-active-border-fg black
set-option -g pane-border-fg black

# Status Bar solarized-light
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-bg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-fg white"
if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-fg white"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0


# Disable assume-paste-time, so that iTerm2's "Send Hex Codes" feature works
# with tmux 2.1. This is backwards-compatible with earlier versions of tmux,
# AFAICT.
set-option -g assume-paste-time 0

# source-file ~/.tmux.conf.local

# Add your local tmux config here
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"


#### mouse behavior
set -g mouse on

# set-window-option -g mode-mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on

# ## These settings can't be used with tmux-yank
# # disable "release mouse drag to copy and exit copy-mode", ref: https://github.com/tmux/tmux/issues/140
# unbind-key -T copy-mode-vi MouseDragEnd1Pane
# # since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# # let single click do selection clearing for us.
# bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection

# # this line changes the default binding of MouseDrag1Pane, the only difference
# # is that we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
# # can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'
# # Note the above config can be used with both nhdaly/tmux-better-mouse-mode and tmux-plugins/tmux-yank.


# Window Settings
setw -g aggressive-resize on

# # Rename your terminals
set -g set-titles off
set -g set-titles-string '#(whoami)::#h::'


##  vim-tmux-pilot configuration
# Uncomment to enable navigation of tmux tabs
# PILOT_MODE=wintab
#
# Uncomment to enable creation of tmux splits automatically
PILOT_BOUNDARY=reflect

# PILOT_ROOT=$HOME/.local/share/nvim/plugged/vim-tmux-pilot
PILOT_ROOT=$HOME/.vim/bundle/vim-tmux-pilot
source-file $PILOT_ROOT/pilot.tmux

# Add binding 'prefix C-l' to send 'C-l' to underlying program
bind C-l send-keys C-l

#------------------------------{{{ Tmux Plugin Manager (TPM) 
## List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'tmux-plugins/tmux-yank'
# set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @scroll-without-changing-pane "on"
set -g @scroll-down-exit-copy-mode "on"
set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'basic'
# set -g @themepack 'powerline/double/cyan'

# Plugin for opening highlighted selection directly from Tmux copy mode.
# o - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux.
# Ctrl-o - open a highlighted selection with the $EDITOR
# Shift-s - search the highlighted selection directly inside a search engine (defaults to google).
set -g @plugin 'tmux-plugins/tmux-open'

## Other examples:
## set -g @plugin 'github_username/plugin_name'
## set -g @plugin 'git@github.com/user/plugin'
## set -g @plugin 'git@bitbucket.com/user/plugin'
#
## Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
#------------------------------}}}
#
# tmux:foldmethod=marker:foldlevel=0
