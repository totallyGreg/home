#autoload
#!/usr/bin/env zsh

main() {
  local verb=$1 secret=$2 keychain=$3

  case "$verb" in
    list|ls) list_secrets ;;
    get) shift; get_secret "$@" ;;
    set) shift; set_secret "$@" ;;
    delete|rm) shift; delete_secret "$@" ;;
    *) print_usage ;;
  esac
}

print_usage() {
  NAME=$(basename "${(%):-%x}")
  cat << EOF
Usage:
  $NAME set <name> <value>
  $NAME get <name>
  $NAME rm <name>
  $NAME ls
EOF
}

list_keychains() {
  security list-keychains | xargs -I{} basename {} -db
}

select_keychain() {
  echo "$1"
  local keychain=$(list_keychains | fzf)
  # local keychain=${1:-(list_keychains | fzf}
  if [[ -n $keychain ]]; then
    echo $keychain
  fi
}

list_secrets() {
  # local keychain=$(select_keychain)
  # local keychain=${1:-$(select_keychain)}
  local keychain=${1:-$(list_keychains | fzf)}
  # security dump-keychain "$keychain" | awk -F= '/0x00000007/ {print $2}' | tr -d \" | fzf
  security dump-keychain "$keychain" | awk -F= '/0x00000007/ {if ($2 !~/<NULL>/) print $2}' | tr -d \" | fzf

}

list_certificates() {
  local keychain=$(select_keychain)
  security find-certificate -a | fzf
}

get_secret() {
  local service=${1}
  # set -x
  if [ $# -eq 2 ]; then
    service="${1}"
    keychain="${2}"
  elif [ $# -eq 1 ]; then
    # This is currently problematic
    service="${1}"
  else
    service=$(list_secrets)
  fi
  # echo "security find-generic-password -a '$USER' -s '$SERVICE' -w '$KEYCHAIN'"
  security find-generic-password -a "$USER" -s "$service" -w "$keychain"
}

"${@:-main}"
# [ "$#" -gt 0 ] || printf "Usage:\n\t./passwords %s\n" "($(compgen -A function | grep '^[^_]' | paste -sd '|' -))"
