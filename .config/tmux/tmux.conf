# Hierarchy:
#  Server
#  ã„´Session
#    ã„´Window
#      ã„´Pane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# [ Sessions options ] {{{
# use C-a, legacy screen muscle memory and home row and easier to hit than C-b
unbind-key C-b
set-option -g prefix C-a

## Start window/pane numbering at 1
set-option -g base-index 1
set-option -g pane-base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# Repeat time limit (ms)
set-option -g repeat-time 50
# Allow the arrow key to be used immediately after changing windows
# But if set to zero will kill my pain-control repeat resize

set-option -g default-terminal "screen-256color"
# set-option -g default-terminal tmux-256color

# Add truecolor support (tmux info | grep Tc)
# testing pulled from junegunn
set-option -ga terminal-overrides ",xterm-256color:Tc"

#### mouse behavior
set-option -g mouse on

# Selection highlight style
set-window-option -g mode-style 'fg=white,bg=brightgreen'

# Show bindings
# unbind-key ?
# bind-key ? display-popup -E "tmux list-keys"
# }}}
# [ Window Management ] {{{
# _  _ _ __ _ ___  ____ _  _   _  _ ____ __ _ ____ ____ ____ _  _ ____ __ _ ___
# |/\| | | \| |__> [__] |/\|   |\/| |--| | \| |--| |__, |=== |\/| |=== | \|  |
## Screen-like switching
# bind-key C-a last-window

## Set window notifications
set-window-option -g monitor-activity on
set -g visual-activity on

## Rename terminal title based on current pane path
## This allows Timing.app to track each pane activity
set -g set-titles on
set -g set-titles-string 'ðŸš€#(whoami)@#h:#{pane_current_path}'
bind-key : command-prompt
bind-key r refresh-client
bind-key R source-file $XDG_CONFIG_HOME/tmux/tmux.conf

## Window Movement
bind-key -r > swap-window -d -t :+
bind-key -r < swap-window -d -t :-
bind-key C-o rotate-window

# Window selection
bind-key space next-window
bind-key bspace previous-window

# Window splits
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"
bind-key "%" split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# }}}
# [ Pane Management ] {{{
# ___  ____ __ _ ____   _  _ ____ __ _ ____ ____ ____ _  _ ____ __ _ ___
# |--' |--| | \| |===   |\/| |--| | \| |--| |__, |=== |\/| |=== | \|  |

#-------------------------------------------------------#
#Pane colours
#-------------------------------------------------------#
# set inactive/active window styles
# set -g window-style 'fg=default,bg=black'
# set -g window-active-style 'fg=default,bg=brightblack'

set-option -g @pane_resize "5"
# These two get overwritten by Tmuxline lightline
set -g pane-active-border-style fg=default,bg=default
set -g pane-border-style fg=default

## Pane Control
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"


bind -r -T root M-h run "($is_vim && tmux send-keys M-h) || \
  tmux resize-pane -L 5"
bind -r -T root M-j run "($is_vim && tmux send-keys M-j) || \
  tmux resize-pane -D 5"
bind -r -T root M-k run "($is_vim && tmux send-keys M-k) || \
  tmux resize-pane -U 5"
bind -r -T root M-l run "($is_vim && tmux send-keys M-l) || \
  tmux resize-pane -R 5"

## Logging
# [x] I want to be able to turn logging on and off `prefix + shift + p`
# [x] Screen Capture (visible pane) `prefix + alt + p`
# [x] dump a panes history to a log file. `prefix + alt + shift + p` conflicts with amethyst
# [ ] and I want the status to reflect when that is happening (in progress)
# [ ] I would like to be able to rename the filename_suffix="#{session_name}-#{window_index}-#{pane_index}-%Y%m%dT%H%M%S.log"

set -g @plugin 'tmux-plugins/tmux-logging'
  set -g @logging-path "$HOME/Library/Logs/Terminal-Logs"
  set -g @save-complete-history-key "F7"

## [ Pane Synchronisation Mode ]
bind-key * setw synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# Variables
sync_ind_colour="#{?pane_synchronized,#[red]#[blink],black}"

# }}}
##  vim-tmux-pilot configuration (Disabled) {{{
# Uncomment to enable navigation of tmux tabs
# PILOT_MODE=wintab
#
# Uncomment to enable creation of tmux splits automatically
PILOT_BOUNDARY=reflect
# PILOT_BOUNDARY=create
# PILOT_ROOT=$HOME/.local/share/nvim/plugged/vim-tmux-pilot
# PILOT_ROOT=$HOME/.vim/bundle/vim-tmux-pilot
# source-file $PILOT_ROOT/pilot.tmux}}}


set -g @navigate-left  '-n C-h'
set -g @navigate-down  '-n C-j'
set -g @navigate-up    '-n C-k'
set -g @navigate-right '-n C-l'
set -g @navigate-back  '-n C-\'

# [ Layout Management ] {{{
#  _    ____ _ _ ____ _  _ ___   _  _ ____ __ _ ____ ____ ____ _  _ ____ __ _ ___
#  |___ |--|  Y  [__] |__|  |    |\/| |--| | \| |--| |__, |=== |\/| |=== | \|  |

# # bind-key = select-layout main-horizontal
bind-key = select-layout main-vertical

bind-key 9 split-window -v "k9s"
bind-key o split-window -v -c ~/Notes "reattach-to-user-namespace vim +Files"

#}}}
# [ Copy and Paste ] {{{
#  ____ ____ ___  _ _   ____ __ _ ___    ___  ____ ____ ___ ____
#  |___ [__] |--'  Y    |--| | \| |__>   |--' |--| ====  |  |===

# Copy-Mode
set-window-option -g mode-keys vi

bind-key [ copy-mode
bind-key ] paste-buffer

# Useful VIM copy keybindings
# Test for Newer versions
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | tr -d '[:alpha:]')"
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi v   send -X begin-selection; \
   bind-key -T copy-mode-vi V   send -X select-line; \
   bind-key -T copy-mode-vi C-v send -X rectangle-toggle; \
   bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel" 

# Double Click to copy word into mac clipboard
bind-key -T root DoubleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -H ; send -X select-word ; run -d0.3 ; send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'"
# Triple click to copy line into mac clipboard
bind-key -T root TripleClick1Pane select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -H ; send -X select-line ; run -d0.3 ; send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'"

#}}}
#  # Status Bar {{{

set -g status-position top
# Dependencies for lightline hacks
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

set -g @prefix_highlight_fg 'black' # default is 'colour231'
set -g @prefix_highlight_bg 'blue'  # default is 'colour04'
set -g @prefix_highlight_prefix_prompt 'Wait'
set -g @prefix_highlight_output_suffix ' î‚²'


set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default is 'fg=default,bg=yellow'

# Show Red when panes are sync'd
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_prompt 'Sync'
set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=red,bold' # default is 'fg=default,bg=yellow'

if-shell "test -f $XDG_CONFIG_HOME/tmux/statusbar" "source $XDG_CONFIG_HOME/tmux/statusbar"
# }}}

# =====================================
# ===        Renew environment      ===
# =====================================
set -g update-environment \
  "DISPLAY\
  ExpressVPN\
  SSH_ASKPASS\
  SSH_AUTH_SOCK\
  SSH_AGENT_PID\
  SSH_CONNECTION\
  SSH_TTY\
  WINDOWID\
  XAUTHORITY"

bind '$' run "$XDG_CONFIG_HOME/tmux/renew_env.sh"
set-environment -g ExpressVPN `$HOME/bin/ExpressVPN.sh`

# {{{ Tmux Plugin Manager (TPM)
setenv -g TMUX_PLUGIN_MANAGER_PATH "$XDG_CONFIG_HOME/tmux/plugins/"
if "test ! -d $XDG_CONFIG_HOME/tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm $XDG_CONFIG_HOME/tmux/plugins/tpm && \
      $XDG_CONFIG_HOME/tmux/plugins/tpm/bin/install_plugins'"

## Core list of useful plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-urlview'      # <prefix> u - listing all urls on bottom pane
set -g @plugin 'wfxr/tmux-fzf-url'
set -g @plugin 'tmux-plugins/tmux-yank'
  set -g -s set-clipboard on
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
  set -g @scroll-without-changing-pane "on"
  set -g @scroll-down-exit-copy-mode "on"

# The best tmux/vim navigation  now in plugin form
set -g @plugin 'sunaku/tmux-navigate'

# sets some useful defaults that that I was doing already and better pane resizing using shift
# set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'sainnhe/tmux-fzf'     # prefix-F to launch
TMUX_FZF_ORDER="session|window|pane|command|keybinding"

set -g @plugin 'tmux-plugins/tmux-sessionist'

set -g @plugin 'laktak/extrakto'
# - press tmux prefix + tab to start extrakto
# - fuzzy find the text/path/url/line
# - use custom filters (ctrl + f)
# - press
#   - tab to insert it to the current pane,
#   - enter to copy it to the clipboard,
# - see other features in HELP (press ctrl-h in extrakto)
# Use it for paths, URLs, options from a man page, git hashes, docker container names, ... screen scrapper extrodinaire!
# You can fuzzy find your text instead of selecting it by hand:
  set -g @extrakto_fzf_layout "default"
  set -g @extrakto_split_direction "a"
  set -g @extrakto_fzf_tool 'fzf --height=100%'

# Plugin for opening highlighted selection directly from Tmux copy mode.
# o - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux.
# Ctrl-o - open a highlighted selection with the $EDITOR
# Shift-s - search the highlighted selection directly inside a search engine (defaults to google).
set -g @plugin 'tmux-plugins/tmux-open'

#-----------------------------}}}

# ==============================================
# {{{ Nesting local and remote sessions
# ==============================================
# Graciously stolen from https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file $XDG_CONFIG_HOME/tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings Â· Issue #237 Â· tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
# }}}

## Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# TPM_COMMAND="~/.tmux/plugins/tpm/tpm"
# run -b $TPM_COMMAND
run -b '$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm'
# ==============================================
# tmux:foldmethod=marker:foldlevel=0
