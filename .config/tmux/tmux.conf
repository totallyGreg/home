# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# {{{ Sessions options

# use C-a, legacy screen muscle memory and home row and easier to hit than C-b
unbind-key C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix            # allow C-a, C-a to pass through (e.g. so vim can increment)
set -g focus-events on
set-option -g detach-on-destroy off # don't exit from tmux when closing a session

## Start window/pane numbering at 1
set-option -g base-index 1
set-option -g pane-base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# Repeat time limit (ms)
set-option -g repeat-time 50
# Allow the arrow key to be used immediately after changing windows
# But if set to zero will kill my pain-control repeat resize

# Undercurl
# set -g default-terminal "${TERM}"
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Add truecolor support (tmux info | grep Tc)
# testing pulled from junegunn
# set-option -ga terminal-overrides ",xterm-256color:Tc"
# for tmux 3.2, you can use the following setting instead:
set -as terminal-features ",xterm-256color:RGB"

#### mouse behavior
set-option -g mouse on

# Selection highlight style
set-window-option -g mode-style 'fg=white,bg=brightgreen'

# Tmux Session selector
# bind-key -n 'M-`' display-popup -E "~/bin/tm"
# bind-key -n 'M-`' display-popup -E "~/.config/tmux/plugins/t-smart-tmux-session-manager/bin/t"
bind-key -n "M-`" run-shell "sesh connect \"$(
        sesh list -tzi | fzf-tmux -p 55%,60% \
                --ansi \
                --no-sort --border-label ' sesh ' --prompt '⚡  ' \
                --header '  ^a all ^t tmux ^g configs ^x zoxide ^d tmux kill ^f find' \
                --bind 'tab:down,btab:up' \
                --bind 'ctrl-a:change-prompt(⚡  )+reload(sesh list -i)' \
                --bind 'ctrl-t:change-prompt(   )+reload(sesh list -ti)' \
                --bind 'ctrl-g:change-prompt(⚙️  )+reload(sesh list -ci)' \
                --bind 'ctrl-x:change-prompt(   )+reload(sesh list -zi)' \
                --bind 'ctrl-f:change-prompt(󰥨   )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
                --bind 'ctrl-d:execute(tmux kill-session -t {})+change-prompt(⚡  )+reload(sesh list)'
)\""

# Show bindings
# unbind-key ?
bind-key ? display-popup -h 90% -w 90% -E "tmux list-keys | fzf"
# bind-key ?  'tmux list-keys | fzf-tmux -p 100%,100%'
# }}}
# {{{ Window Management
# _  _ _ __ _ ___  ____ _  _   _  _ ____ __ _ ____ ____ ____ _  _ ____ __ _ ___
# |/\| | | \| |__> [__] |/\|   |\/| |--| | \| |--| |__, |=== |\/| |=== | \|  |
## Screen-like switching
# bind-key C-a last-window

## Set window notifications
set-window-option -g monitor-activity on
set -g visual-activity on

## Rename terminal title based on current pane path
## This used to allow Timing.app to track each pane activity...
set -g set-titles on
set -g set-titles-string '#(whoami)@#h:#{pane_current_path}'
# set -g set-titles-string '\e]7;#(whoami)@#h:#{pane_current_path}'
bind-key : command-prompt
bind-key r refresh-client
bind-key R source-file $XDG_CONFIG_HOME/tmux/tmux.conf\; display-message "Reloaded Config"
# window rename on focus
# set-hook -g pane-focus-in 'rename-window "#T"'

## Window Movement
bind-key -r > swap-window -d -t :+
bind-key -r < swap-window -d -t :-
bind-key C-o rotate-window

# Window selection
# bind-key space next-window
bind-key bspace previous-window

# Window splits
bind-key "|" split-window -h -c "#{pane_current_path}"
bind-key "\\" split-window -fh -c "#{pane_current_path}"
bind-key "-" split-window -v -c "#{pane_current_path}"
bind-key "_" split-window -fv -c "#{pane_current_path}"
bind-key "%" split-window -h -c "#{pane_current_path}"
bind-key '"' split-window -v -c "#{pane_current_path}"

# }}}
# {{{ Pane Management
# ___  ____ __ _ ____   _  _ ____ __ _ ____ ____ ____ _  _ ____ __ _ ___
# |--' |--| | \| |===   |\/| |--| | \| |--| |__, |=== |\/| |=== | \|  |

#-------------------------------------------------------#
#Pane colours
#-------------------------------------------------------#
# set inactive/active window styles
# set -g window-style 'fg=default,bg=black'
# set -g window-active-style 'fg=default,bg=brightblack'

set-option -g history-limit 10000

set-option -g @pane_resize "5"
# set -g pane-border-format ' #T '
# set -g pane-border-status top

# These two get overwritten by Tmuxline lightline
set -g pane-active-border-style fg=default,bg=default
set -g pane-border-style fg=default

## Pane Control
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"


bind -r -T root M-h run "($is_vim && tmux send-keys M-h) || \
  tmux resize-pane -L 5"
bind -r -T root M-j run "($is_vim && tmux send-keys M-j) || \
  tmux resize-pane -D 5"
bind -r -T root M-k run "($is_vim && tmux send-keys M-k) || \
  tmux resize-pane -U 5"
bind -r -T root M-l run "($is_vim && tmux send-keys M-l) || \
  tmux resize-pane -R 5"

## Logging
# - [x] I want to be able to turn logging on and off `prefix + shift + p`
# - [x] Screen Capture (visible pane) `prefix + alt + p`
# - [x] dump a panes history to a log file. `prefix + alt + shift + p` conflicts with amethyst
# - [ ] and I want the status to reflect when that is happening (in progress)
# - [ ] I want to be able to rename the log session to more accurately reflect the activity

set -g @plugin 'tmux-plugins/tmux-logging'
  set -g @logging-path "$HOME/Library/Logs/Terminal-Logs"
  set -g @screen-capture-path "#{pane_current_path}"
  set -g @save-complete-history-path "#{pane_current_path}"
  set -g @save-complete-history-key "F7"  # Extended Function keys (F13) do not work
  set -g @save_complete_history_filename "tmux-%Y%m%dT%H%M%S-#{session_name}-#{window_name}.log" # This is not getting picked up

## [ Pane Synchronisation Mode ]
bind-key * setw synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"

# Variables
sync_ind_colour="#{?pane_synchronized,#[red]#[blink],black}"

# }}}
# {{{ Layout Management
#  _    ____ _ _ ____ _  _ ___   _  _ ____ __ _ ____ ____ ____ _  _ ____ __ _ ___
#  |___ |--|  Y  [__] |__|  |    |\/| |--| | \| |--| |__, |=== |\/| |=== | \|  |

# # bind-key = select-layout main-horizontal
bind-key = select-layout main-vertical

bind-key 9 split-window -v "k9s"
# bind-key o split-window -v -c ~/Notes "reattach-to-user-namespace nvim +ObsidianDailies"

#}}}
# {{{ Copy and Paste
#  ____ ____ ___  _ _   ____ __ _ ___    ___  ____ ____ ___ ____
#  |___ [__] |--'  Y    |--| | \| |__>   |--' |--| ====  |  |===

# Copy-Mode
set -g mode-keys vi

bind-key [ copy-mode
bind-key ] paste-buffer

set -g @plugin 'tmux-plugins/tmux-yank'
# Double Click to copy word into mac clipboard
# Triple click to copy line into mac clipboard
  set -g -s set-clipboard external
  # set -g @yank_action 'copy-pipe' # or 'copy-pipe-and-cancel' for the default

# Useful VIM copy keybindings
# Test for Newer versions
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | tr -d '[:alpha:]')"
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi v   send -X begin-selection; \
   bind-key -T copy-mode-vi V   send -X select-line; \
   bind-key -T copy-mode-vi C-v send -X rectangle-toggle; \
   bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel" 
#}}}
# {{{ Status Bar

set -g status-position top
# Dependencies for lightline hacks
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'samoshkin/tmux-plugin-sysstat'

set -g @prefix_highlight_fg 'black' # default is 'colour231'
set -g @prefix_highlight_bg 'blue'  # default is 'colour04'
set -g @prefix_highlight_prefix_prompt 'Wait'
set -g @prefix_highlight_output_suffix ' '


set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_copy_mode_attr 'fg=black,bg=yellow,bold' # default is 'fg=default,bg=yellow'

# Show Red when panes are sync'd
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_sync_prompt 'Sync'
set -g @prefix_highlight_sync_mode_attr 'fg=black,bg=red,bold' # default is 'fg=default,bg=yellow'

if-shell "test -f $XDG_CONFIG_HOME/tmux/statusbar" "source $XDG_CONFIG_HOME/tmux/statusbar"
# }}}

# =====================================
# ===        Renew environment      ===
# =====================================
set -g update-environment \
  "DISPLAY\
  AWS_SSO_PROFILE\
  ExpressVPN\
  SSH_ASKPASS\
  SSH_AUTH_SOCK\
  SSH_AGENT_PID\
  SSH_CONNECTION\
  SSH_TTY\
  WINDOWID\
  XAUTHORITY"

bind '$' run "$XDG_CONFIG_HOME/tmux/renew_env.sh"
set-environment -g ExpressVPN `$HOME/bin/ExpressVPN.sh`

set-environment -g ITERM_ENABLE_SHELL_INTEGRATION_WITH_TMUX YES
set-option -g allow-passthrough on

# {{{ Tmux Plugin Manager (TPM)
setenv -g TMUX_PLUGIN_MANAGER_PATH "$XDG_CONFIG_HOME/tmux/plugins/"
if "test ! -d $XDG_CONFIG_HOME/tmux/plugins/tpm" \
  "run 'git clone https://github.com/tmux-plugins/tpm $XDG_CONFIG_HOME/tmux/plugins/tpm && \
      $XDG_CONFIG_HOME/tmux/plugins/tpm/bin/install_plugins'"

## Core list of useful plugins
set -g @plugin 'tmux-plugins/tpm'
# Workaround for sensible bug in 3.5a https://github.com/tmux/tmux/issues/4162 doesn't seem to work
# Removing reattach-to-user-namespace resolved this issue.
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sessionist'

## {{{ Searching
set -g @plugin 'roosta/tmux-fuzzback' # <prefix>-? to search back in buffer
  set -g @fuzzback-bind /
  set -g @fuzzback-popup 1
  set -g @fuzzback-popup-size '90%'
  # set -g @fuzzback-fzf-bind 'ctrl-y:execute-silent(echo -n {3..} | pbcopy )+abort'
set -g @plugin 'wfxr/tmux-fzf-url' # Search for urls with <prefix>-u
  # set -g @fzf-url-history-limit '2000'
# open tmux-fzf-url in a tmux v3.2+ popup
  set -g @fzf-url-fzf-options '-w 50% -h 50% --multi -0 --no-preview --no-border'
# }}}

# Better tmux window management but it does have some overlap with amethyst bindings 
# Still evaluating if its worth it https://github.com/jabirali/tmux-tilish#application-launcher
# It breaks my control-h,j,k.l navigation however.
# set -g @plugin 'jabirali/tmux-tilish'
  # set -g @tilish-default 'main-vertical'
  # set -g @tilish-easymode 'on'
  # set -g @tilish-prefix 'M-space'
  # set -g @tilish-dmenu 'on'
  # set -g @tilish-navigate 'on'
# Testing some Pane management
# set -g @plugin 'sturob/tmux-propane'
# The best tmux/vim navigation  now in plugin form
set -g @plugin 'sunaku/tmux-navigate'
# Moving these to hopefully still work with tilish
  set -g @navigate-left  '-n C-h'
  set -g @navigate-down  '-n C-j'
  set -g @navigate-up    '-n C-k'
  set -g @navigate-right '-n C-l'
  set -g @navigate-back  '-n C-\'

# persistent session management
set -g @plugin 'tmux-plugins/tmux-resurrect'
  set -g @resurrect-dir '~/.config/tmux/resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
  set -g @continuum-save-interval '5'
  # If things get weird you can disable this
  set -g @continuum-restore 'on'
  # or simply `touch ~/tmux_no_auto_restore`

# sets some useful defaults that that I was doing already and better pane resizing using shift
# set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'sainnhe/tmux-fzf'     # prefix-F to launch
# TMUX_FZF_ORDER="session|window|pane|command|clipboard|keybinding"
TMUX_FZF_ORDER="session|window|pane|command|keybinding"
TMUX_FZF_LAUNCH_KEY="C-f"

# Useful session tool but hard to remember
# would rather fix ta2 to prompt for commands with fzf
# set -g @plugin 'tmux-plugins/tmux-sessionist'

# Plugin for opening highlighted selection directly from Tmux copy mode.
# o - "open" a highlighted selection with the system default program. open for OS X or xdg-open for Linux.
# Ctrl-o - open a highlighted selection with the $EDITOR
# Shift-s - search the highlighted selection directly inside a search engine (defaults to google).
set -g @plugin 'tmux-plugins/tmux-open'

# Testing color theme:  From https://medium.com/code-art/after-n-years-im-finally-using-tmux-in-such-an-elegant-way-8d2492d964db
# set -g @plugin 'wenijinew/eu.tmux'   # disabled because it caused error: '$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm' returned 2

#-----------------------------}}}
# {{{ Nesting local and remote sessions
# ==============================================
# Graciously stolen from https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf
# May want to consider https://github.com/MunifTanjim/tmux-suspend

# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file $XDG_CONFIG_HOME/tmux/tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
# }}}

## Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# TPM_COMMAND="~/.tmux/plugins/tpm/tpm"
# run -b $TPM_COMMAND
run -b '$XDG_CONFIG_HOME/tmux/plugins/tpm/tpm'
# ==============================================
# tmux:foldmethod=marker:foldlevel=0
